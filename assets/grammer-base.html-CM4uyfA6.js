const t=JSON.parse('{"key":"v-4f5c5616","path":"/note/java/grammer-base.html","title":"基础语法","lang":"en-US","frontmatter":{"title":"基础语法","order":0,"tag":["harmonyOS"],"description":"关键字 关键字 含义 关键字 含义 abstract 表明类或者成员方法具有抽象属性 assert 用来进行程序调试 boolean 基本数据类型之一，布尔类型 break 提前跳出一个块 byte 基本数据类型之一，字节类型 case 用在switch语句之中，表是其中的一个分支 catch 用在异常处理中，用来捕捉异常 char 基本数据类型之一，字符类型 class 类 const 保留关键字，没有具体含义 continue 回到一个块的开始处 default 默认，例如，用在switch语句中，表明一个默认的分支 do 用在do-while循环结构中 double 基本数据类型之一，双精度浮点数类型 else 用在条件语句中，表明当条件不成立时的分支 enum 枚举 extends 表明一个类型是另一个类型的子类型，这里常见的类型有类和接口 final 用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变 finally 用于处理异常情况，用来声明一个基本肯定会被执行到的语句块 float 基本数据类型之一，单精度浮点数类型 for 一种循环结构的引导词 goto 保留关键字，没有具体含义 if 条件语句的引导词 implements 表明一个类实现了给定的接口 import 表明要访问指定的类或包 instanceof 用来测试一个对象是否是指定类型的实例对象 int 基本数据类型之一，整数类型 interface 接口 long 基本数据类型之一，长整数类型 native 用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的 new 用来创建新实例对象 package 包 private 一种访问控制方式：私用模式 protected 一种访问控制方式：保护模式 public 一种访问控制方式：共用模式 return 从成员方法中返回数据 short 基本数据类型之一,短整数类型 static 表明具有静态属性 strictfp 用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE super 表明当前对象的父类型的引用或者父类型的构造方法 switch 分支语句结构的引导词 synchronized 表明一段代码需要同步执行 this 指向当前实例对象的引用 throw 指向当前实例对象的引用 throws 声明在当前定义的成员方法中所有需要抛出的异常 transient 声明不用序列化的成员域 try 尝试一个可能抛出异常的程序块 void 声明当前成员方法没有返回值 volatile 表明两个或者多个变量必须同步地发生变化 while 用在循环结构中","head":[["meta",{"property":"og:url","content":"https://export-nan.github.io/nan-blogs/note/java/grammer-base.html"}],["meta",{"property":"og:site_name","content":"NAN"}],["meta",{"property":"og:title","content":"基础语法"}],["meta",{"property":"og:description","content":"关键字 关键字 含义 关键字 含义 abstract 表明类或者成员方法具有抽象属性 assert 用来进行程序调试 boolean 基本数据类型之一，布尔类型 break 提前跳出一个块 byte 基本数据类型之一，字节类型 case 用在switch语句之中，表是其中的一个分支 catch 用在异常处理中，用来捕捉异常 char 基本数据类型之一，字符类型 class 类 const 保留关键字，没有具体含义 continue 回到一个块的开始处 default 默认，例如，用在switch语句中，表明一个默认的分支 do 用在do-while循环结构中 double 基本数据类型之一，双精度浮点数类型 else 用在条件语句中，表明当条件不成立时的分支 enum 枚举 extends 表明一个类型是另一个类型的子类型，这里常见的类型有类和接口 final 用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变 finally 用于处理异常情况，用来声明一个基本肯定会被执行到的语句块 float 基本数据类型之一，单精度浮点数类型 for 一种循环结构的引导词 goto 保留关键字，没有具体含义 if 条件语句的引导词 implements 表明一个类实现了给定的接口 import 表明要访问指定的类或包 instanceof 用来测试一个对象是否是指定类型的实例对象 int 基本数据类型之一，整数类型 interface 接口 long 基本数据类型之一，长整数类型 native 用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的 new 用来创建新实例对象 package 包 private 一种访问控制方式：私用模式 protected 一种访问控制方式：保护模式 public 一种访问控制方式：共用模式 return 从成员方法中返回数据 short 基本数据类型之一,短整数类型 static 表明具有静态属性 strictfp 用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE super 表明当前对象的父类型的引用或者父类型的构造方法 switch 分支语句结构的引导词 synchronized 表明一段代码需要同步执行 this 指向当前实例对象的引用 throw 指向当前实例对象的引用 throws 声明在当前定义的成员方法中所有需要抛出的异常 transient 声明不用序列化的成员域 try 尝试一个可能抛出异常的程序块 void 声明当前成员方法没有返回值 volatile 表明两个或者多个变量必须同步地发生变化 while 用在循环结构中"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-15T15:43:03.000Z"}],["meta",{"property":"article:author","content":"NAN"}],["meta",{"property":"article:tag","content":"harmonyOS"}],["meta",{"property":"article:modified_time","content":"2024-09-15T15:43:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-15T15:43:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"NAN\\",\\"url\\":\\"https://github.com/open-nan\\"}]}"]]},"headers":[{"level":2,"title":"关键字","slug":"关键字","link":"#关键字","children":[]},{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"变量类型","slug":"变量类型","link":"#变量类型","children":[]}]},{"level":2,"title":"常量","slug":"常量","link":"#常量","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":1726414983000,"updatedTime":1726414983000,"contributors":[{"name":"NAN","email":"54296915+open-nan@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.77,"words":1730},"filePathRelative":"note/java/grammer-base.md","localizedDate":"September 15, 2024","excerpt":"<h2> 关键字</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>关键字</th>\\n<th>含义</th>\\n<th>关键字</th>\\n<th>含义</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>abstract</td>\\n<td>表明类或者成员方法具有抽象属性</td>\\n<td>assert</td>\\n<td>用来进行程序调试</td>\\n</tr>\\n<tr>\\n<td>boolean</td>\\n<td>基本数据类型之一，布尔类型</td>\\n<td>break</td>\\n<td>提前跳出一个块</td>\\n</tr>\\n<tr>\\n<td>byte</td>\\n<td>基本数据类型之一，字节类型</td>\\n<td>case</td>\\n<td>用在switch语句之中，表是其中的一个分支</td>\\n</tr>\\n<tr>\\n<td>catch</td>\\n<td>用在异常处理中，用来捕捉异常</td>\\n<td>char</td>\\n<td>基本数据类型之一，字符类型</td>\\n</tr>\\n<tr>\\n<td>class</td>\\n<td>类</td>\\n<td>const</td>\\n<td>保留关键字，没有具体含义</td>\\n</tr>\\n<tr>\\n<td>continue</td>\\n<td>回到一个块的开始处</td>\\n<td>default</td>\\n<td>默认，例如，用在switch语句中，表明一个默认的分支</td>\\n</tr>\\n<tr>\\n<td>do</td>\\n<td>用在do-while循环结构中</td>\\n<td>double</td>\\n<td>基本数据类型之一，双精度浮点数类型</td>\\n</tr>\\n<tr>\\n<td>else</td>\\n<td>用在条件语句中，表明当条件不成立时的分支</td>\\n<td>enum</td>\\n<td>枚举</td>\\n</tr>\\n<tr>\\n<td>extends</td>\\n<td>表明一个类型是另一个类型的子类型，这里常见的类型有类和接口</td>\\n<td>final</td>\\n<td>用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变</td>\\n</tr>\\n<tr>\\n<td>finally</td>\\n<td>用于处理异常情况，用来声明一个基本肯定会被执行到的语句块</td>\\n<td>float</td>\\n<td>基本数据类型之一，单精度浮点数类型</td>\\n</tr>\\n<tr>\\n<td>for</td>\\n<td>一种循环结构的引导词</td>\\n<td>goto</td>\\n<td>保留关键字，没有具体含义</td>\\n</tr>\\n<tr>\\n<td>if</td>\\n<td>条件语句的引导词</td>\\n<td>implements</td>\\n<td>表明一个类实现了给定的接口</td>\\n</tr>\\n<tr>\\n<td>import</td>\\n<td>表明要访问指定的类或包</td>\\n<td>instanceof</td>\\n<td>用来测试一个对象是否是指定类型的实例对象</td>\\n</tr>\\n<tr>\\n<td>int</td>\\n<td>基本数据类型之一，整数类型</td>\\n<td>interface</td>\\n<td>接口</td>\\n</tr>\\n<tr>\\n<td>long</td>\\n<td>基本数据类型之一，长整数类型</td>\\n<td>native</td>\\n<td>用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的</td>\\n</tr>\\n<tr>\\n<td>new</td>\\n<td>用来创建新实例对象</td>\\n<td>package</td>\\n<td>包</td>\\n</tr>\\n<tr>\\n<td>private</td>\\n<td>一种访问控制方式：私用模式</td>\\n<td>protected</td>\\n<td>一种访问控制方式：保护模式</td>\\n</tr>\\n<tr>\\n<td>public</td>\\n<td>一种访问控制方式：共用模式</td>\\n<td>return</td>\\n<td>从成员方法中返回数据</td>\\n</tr>\\n<tr>\\n<td>short</td>\\n<td>基本数据类型之一,短整数类型</td>\\n<td>static</td>\\n<td>表明具有静态属性</td>\\n</tr>\\n<tr>\\n<td>strictfp</td>\\n<td>用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE</td>\\n<td>super</td>\\n<td>表明当前对象的父类型的引用或者父类型的构造方法</td>\\n</tr>\\n<tr>\\n<td>switch</td>\\n<td>分支语句结构的引导词</td>\\n<td>synchronized</td>\\n<td>表明一段代码需要同步执行</td>\\n</tr>\\n<tr>\\n<td>this</td>\\n<td>指向当前实例对象的引用</td>\\n<td>throw</td>\\n<td>指向当前实例对象的引用</td>\\n</tr>\\n<tr>\\n<td>throws</td>\\n<td>声明在当前定义的成员方法中所有需要抛出的异常</td>\\n<td>transient</td>\\n<td>声明不用序列化的成员域</td>\\n</tr>\\n<tr>\\n<td>try</td>\\n<td>尝试一个可能抛出异常的程序块</td>\\n<td>void</td>\\n<td>声明当前成员方法没有返回值</td>\\n</tr>\\n<tr>\\n<td>volatile</td>\\n<td>表明两个或者多个变量必须同步地发生变化</td>\\n<td>while</td>\\n<td>用在循环结构中</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
