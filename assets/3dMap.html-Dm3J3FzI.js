const n=JSON.parse(`{"key":"v-2082d668","path":"/note/webgl/3dMap.html","title":"","lang":"en-US","frontmatter":{"description":"Threejs 3d 地图加载器 // @ts-ignore import * as THREE from 'three'; // @ts-ignore import * as d3 from 'd3'; import type {Featuresjson, Mapjson, Coordinates, Coordinate} from './map_package/type'; import { geojsons } from './map_package/index'; const depth = 3 // 设置模型的厚度 let containerElement: HTMLElement; let screenBox: HTMLElement; const mouse = new THREE.Vector2(); const mouseRaycaster = new THREE.Raycaster(); // 事件点数组 let eventPoint: Record&lt;string, EventPoint|undefined&gt; = {} // threejs 渲染器 export class ThreeMap { public renderer: THREE.WebGLRenderer; public scene: THREE.Scene; public camera: THREE.PerspectiveCamera; public height: number; public width: number; constructor(element: HTMLElement){ containerElement = element; const {width, height} = element.getBoundingClientRect(); this.height = height; this.width = width; // 创建webGL渲染器 this.renderer = new THREE.WebGLRenderer( { antialias: true,alpha: true} ); this.renderer.shadowMap.enabled = true; // 开启阴影 this.renderer.shadowMap.type = THREE.PCFSoftShadowMap; this.renderer.toneMapping = THREE.ACESFilmicToneMapping; this.renderer.toneMappingExposure = 1.25; this.renderer.setPixelRatio( window.devicePixelRatio ); this.renderer.setClearColor(0xffffff, 0); this.renderer.setSize(width, height); // 场景 this.scene = new THREE.Scene(); // 相机 透视相机 this.camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 5000); this.camera.position.set(0, -40, 150); this.camera.lookAt(0, 0, 0); // 将渲染器注入到容器里 containerElement.appendChild(this.renderer.domElement); containerElement.addEventListener('mousemove',(event) =&gt; Object.bind(this, this.onMouseMove(event))); containerElement.addEventListener('click',(event) =&gt; Object.bind(this, this.onMouseClick(event))); this.resizeObserver.observe(containerElement) // 添加一个屏幕空间UI盒子 用来放置一些UI元素 screenBox = document.createElement('div') screenBox.style.position = 'absolute' screenBox.className = 'screen-space-ui' containerElement.appendChild(screenBox) } // 切换地图模型 public switchMap(mapName: string){ // 移除上一个地图对象 const current = this.mapModleRecord[this.currentMapName] if(current!==undefined) { current.destroy() } if(geojsons[mapName]===undefined) { console.error('地图不存在') return } this.createMapModle(geojsons[mapName]) Object.values(eventPoint).forEach(item=&gt;{ if(item!==undefined) item.remove() }) eventPoint = {} } // 创建地图模型 private mapModleRecord: Record&lt;string, CreateMap&gt; = {}; private currentMapName: string = ''; private createMapModle(mapJson: Mapjson){ let MapModle = this.mapModleRecord[mapJson.name] if(MapModle===undefined){ MapModle = new CreateMap(mapJson) this.mapModleRecord[mapJson.name] = MapModle }else{ MapModle.rebuild() } this.currentMapName = mapJson.name this.scene.add(MapModle.Object3D as THREE.Object3D) } // 获取一个区块的中心点坐标 private getFeatureCentroid(featureName: string){ return this.mapModleRecord[this.currentMapName].getFeatureCentroid(featureName) } // 事件点 setEventPoint(data: {name: string, value: number}[], template?: (name: string, value: number)=&gt;string){ const newEventPoint:Record&lt;string, EventPoint|undefined&gt; = {} data.forEach(item=&gt;{ const defaultTemplate = (name: string, value: number) =&gt;{ return \` &lt;div class='point'&gt;&lt;/div&gt; &lt;div class='text'&gt; &lt;span class='name'&gt;\${name}&lt;/span&gt; &lt;span class='value'&gt;\${value}&lt;/span&gt; &lt;/div&gt; \` } const ponit = this.updateEventPoint(item.name, item.value, template||defaultTemplate) newEventPoint[item.name] = ponit eventPoint[item.name] = undefined }) Object.values(eventPoint).forEach(item=&gt;{ if(item===undefined) return item.remove() }) eventPoint = newEventPoint } // 更新事件点 public updateEventPoint(featureName: string, value: number, template: (name: string, value: number)=&gt;string){ let dom = eventPoint[featureName] const featureCenter = this.getFeatureCentroid(featureName) if(featureCenter===undefined)return undefined const [x, y, z] = featureCenter const sp = this.toScreenPosition(new THREE.Vector3(x, -y, z)) if(dom!==undefined){ dom.value = value dom.x = sp.x dom.y = sp.y }else{ dom = new EventPoint(sp.x, sp.y, featureName, value, template) } return dom } // 获取所有事件点 public getAllEventPoint(): EventPoint[]{ return Object.values(eventPoint).filter(item=&gt;item!==undefined) as EventPoint[] } // 渲染场景 async render(){ this.renderer.render(this.scene, this.camera); requestAnimationFrame(()=&gt;this.render()) } // 防抖 private debounce?: number private intersectMap: boolean = false private onMouseMove(event: any) { const currentMap = this.mapModleRecord[this.currentMapName] // 将鼠标位置转换为归一化设备坐标 (-1 到 +1) const rect = containerElement.getBoundingClientRect(); const mouseX = event.clientX - rect.left; const mouseY = event.clientY - rect.top; mouse.x = (mouseX / rect.width) * 2 - 1; mouse.y = -(mouseY / rect.height) * 2 + 1; // 更新射线 mouseRaycaster.setFromCamera(mouse, this.camera); const intersectFeatures:CreateFeature[] = [] const activeFeatures:CreateFeature[] = [] if(currentMap===undefined)return const features = Object.values(currentMap.features) const intersectMap = mouseRaycaster.intersectObject(currentMap.Object3D as THREE.Object3D) if(intersectMap.length===0){ if(this.intersectMap){ features.filter(item=&gt;item.isActive).forEach(feature=&gt;{ feature.isActive = false }) } this.intersectMap = false this.emitMoveMouseEvent(null) return } this.intersectMap = true features.forEach((feature)=&gt;{ if(feature.isActive){ activeFeatures.push(feature) } if(feature.Object3D===null)return const inter = mouseRaycaster.intersectObject(feature.Object3D) if(inter.length&gt;0){ intersectFeatures.push(feature) } }) if(this.debounce!==undefined){ clearTimeout(this.debounce) this.debounce = undefined } this.debounce = setTimeout(()=&gt;{ if(intersectFeatures.length&gt;0){ activeFeatures.filter(item=&gt;item.name!==intersectFeatures[0].name).forEach(feature=&gt;{ feature.isActive = false }) const feature = intersectFeatures[0] feature.isActive = true this.emitMoveMouseEvent(feature) } clearTimeout(this.debounce) this.debounce = undefined }) as number } // 监听鼠标点击事件 private onMouseClick(event: any) { const currentMap = this.mapModleRecord[this.currentMapName] const features = Object.values(currentMap.features) const intersectFeatures:CreateFeature[] = [] features.forEach((feature)=&gt;{ if(feature.Object3D===null)return const inter = mouseRaycaster.intersectObject(feature.Object3D) if(inter.length&gt;0){ intersectFeatures.push(feature) } }) if(intersectFeatures.length&gt;0){ this.emitClickMouseEvent(intersectFeatures[0]) } } // 监听鼠标移动事件 private moveMouseEventList:Map&lt;(feature: CreateFeature|null)=&gt;void, {that: Object}&gt; = new Map() public onMoveMouseEvent(callback: (feature: CreateFeature|null)=&gt;void, that: Object = window){ this.moveMouseEventList.set(callback,{that}) } public removeMoveMouseEvent(callback: (feature: CreateFeature|null)=&gt;void){ this.moveMouseEventList.delete(callback) } private emitMoveMouseEvent(feature: CreateFeature|null){ this.moveMouseEventList.forEach((item, callback)=&gt;{ callback.bind(item.that)(feature) }) } // 监听鼠标点击事件 private mouseClickEventList:Map&lt;(feature: CreateFeature)=&gt;void, {that: Object}&gt; = new Map() public onClickMouseEvent(callback: (feature: CreateFeature)=&gt;void, that: Object = window){ this.mouseClickEventList.set(callback,{that}) } public removeClickMouseEvent(callback: (feature: CreateFeature)=&gt;void){ this.mouseClickEventList.delete(callback) } private emitClickMouseEvent(feature: CreateFeature){ this.mouseClickEventList.forEach((item, callback)=&gt;{ callback.bind(item.that)(feature) }) } // 设置一个区块高亮状态 setHighlightStatus(featureName: string, highlight: boolean = false) { const currentMap = this.mapModleRecord[this.currentMapName] if(currentMap===undefined)return currentMap.setHighlightStatus(featureName, highlight); const featureCentroid = currentMap.getFeatureCentroid(featureName); if(featureCentroid===undefined)return const [x, y, z] = featureCentroid const p = eventPoint[featureName] if(p === undefined)return const sp = this.toScreenPosition(new THREE.Vector3(x, -y, z)); p.x = sp.x; p.y = sp.y; } // 清空其他区域的高亮 clearHighlight() { const currentMap = this.mapModleRecord[this.currentMapName] if(currentMap===undefined)return Object.values(currentMap.features).forEach((feature) =&gt; { this.setHighlightStatus(feature.name) }); } // 将 3D 坐标转换到屏幕空间坐标的函数 toScreenPosition(vec3: THREE.Vector3) { // 将世界坐标投影到相机的裁剪空间 vec3.project(this.camera); // 将裁剪空间坐标转换为屏幕空间坐标 const rect = containerElement.getBoundingClientRect(); const halfWidth = rect.width / 2; const halfHeight = rect.height / 2; return { x: (vec3.x * halfWidth) + halfWidth, y: -(vec3.y * halfHeight) + halfHeight }; } resizeObserver = new ResizeObserver(entries =&gt; { for (let entry of entries) { const { width, height } = entry.contentRect; this.resize(width, height); } }); // 更新地图的大小 private resizeDebounce?: number resize(width: number, height: number) { if(this.resizeDebounce!==undefined){ clearTimeout(this.resizeDebounce) this.resizeDebounce = undefined } this.resizeDebounce = setTimeout(()=&gt;{ if(width!==this.width||height!==this.height){ this.camera.aspect = width / height; this.camera.updateProjectionMatrix(); this.renderer.setSize(width, height); this.getAllEventPoint().forEach((eventPoint)=&gt;{ const featureCenter = this.getFeatureCentroid(eventPoint.name) if(featureCenter===undefined)return undefined const [x, y] = featureCenter const sp = this.toScreenPosition(new THREE.Vector3(x, -y, 2)) eventPoint.x = sp.x eventPoint.y = sp.y }) } clearTimeout(this.resizeDebounce) this.resizeDebounce = undefined }) as number } // 销毁整个地图 destroy(){ Object.values(this.mapModleRecord).forEach((map)=&gt;{ map.destroy() }) Object.values(eventPoint).forEach((eventPoint)=&gt;{ eventPoint?.remove() }) } } // 事件点虚拟dom class EventPoint{ dom: HTMLElement template:(name: string, value: number)=&gt;string private _name: string = '' set name(value: string){ this._name = value; this.dom.innerHTML = this.template(this.name, this.value) } get name(){ return this._name } private _value: number = 0 set value(value: number){ this._value = value; this.dom.innerHTML = this.template(this.name, this.value) } get value(){ return this._value } private _x: number = 0 set x(value: number){ this._x = value this.dom.style.left = \`\${value}px\` } get x(){ return this._x } private _y: number = 0 set y(value: number){ this._y = value this.dom.style.top = \`\${value}px\` } get y(){ return this._y } private _className: Record&lt;string, boolean&gt; = {} get className(){ return Object.keys(this._className).filter((item)=&gt;{ return this._className[item] }).join(' ') } addClassNames(value: string){ this._className[value] = true this.dom.className = this.className } removeClassNames(value: string){ this._className[value] = false this.dom.className = this.className } constructor(x: number, y: number, name: string, value: number, template:(name: string, value: number)=&gt;string){ this.template = template this.dom = document.createElement('div') this.dom.style.position = 'absolute' this.dom.innerHTML = template(name, value) this.x = x this.y = y this.name = name this.value = value this.addClassNames('evnet-point') screenBox.appendChild(this.dom) } remove(){ this.dom.remove() } } // 创建地图 模型 class CreateMap{ Object3D: THREE.Object3D|null // 地图的3D对象 readonly features: Record&lt;string, CreateFeature&gt; = {} // 区块 private projection:d3.GeoProjection; // 墨卡托投影转换 constructor(mapJson: Mapjson){ this.Object3D = new THREE.Object3D() const bbox = mapJson.bbox; const offset = mapJson.offset; const rect = containerElement.getBoundingClientRect(); this.projection = d3.geoMercator() .center( bbox===undefined?[104.0, 37.5]: [(bbox[0][0] + bbox[1][0]) / 2, (bbox[0][1] + bbox[1][1]) / 2] ) .translate(offset===undefined? [0, 0] :[offset[0], offset[1]]) if(bbox!==undefined){ const bboxWidth = bbox[1][0] - bbox[0][0]; const bboxHeight = bbox[0][1] - bbox[1][1]; const scale = Math.min(rect.width / bboxWidth, rect.height / bboxHeight) * (mapJson.scale||6); this.projection = this.projection.scale(scale) } const {features} = mapJson; features.forEach((feature) =&gt; { const Feature = this.createFeature(feature) this.Object3D?.add(Feature.Object3D as THREE.Object3D); }) } // 创建区块对象 createFeature(feature: Featuresjson){ const area = new CreateFeature(feature, this.projection as (opt: [number, number])=&gt; [number, number]) this.features[feature.properties.name] = area return area } // 获取一个区块的质心 getFeatureCentroid(name: string):[number, number, number]|undefined{ const feature = this.features[name] if(!feature) return undefined const centroid = feature?.centroid const depth = feature.depth if (!centroid) return undefined const [x, y] = centroid return [x, y, depth] as [number, number, number] } // 设置一个区块高亮状态 setHighlightStatus(featureName: string, highlight: boolean = false) { const feature = this.features[featureName]; if (feature) { feature.isActive = highlight; } } // 销毁当前模型 destroy(){ Object.values(this.features).forEach((feature) =&gt; { feature.destroy() }) this.Object3D?.parent?.remove(this.Object3D) this.Object3D === null } // 重新构建 rebuild(){ if(this.Object3D !== null){ this.destroy() } this.Object3D = new THREE.Object3D() Object.values(this.features).forEach((feature) =&gt; { const FeatureObject3D = feature.rebuild(); this.Object3D?.add(feature.Object3D as THREE.Object3D); }) } } // 创建区块 模型 class CreateFeature{ Object3D: THREE.Object3D|null // 区块的3D对象 name: string // 区块的名称 center?: [number, number] // 区块的中心点 centroid?: [number, number] // 质心点 is2d: boolean = false // 区块是否为2D shapes: THREE.Shape[] = [] // 平面图形 geometrys: THREE.ExtrudeGeometry[] = [] // 立体模型 mesh: THREE.Mesh[] = [] // 区块的网格模型 private _isActive: boolean = false // 区块是否被选中 // 区块是否被选中 get isActive(){ return this._isActive } set isActive(value: boolean){ this._isActive = value this.setHighlight(value) this.scaleZ = value?2:1 const eventpoint = eventPoint[this.name] if(eventpoint!==undefined){ if(value){ eventpoint.addClassNames('active') }else{ eventpoint.removeClassNames('active') } } } _scaleZ: number = 1 // 区块的z轴拉伸 get scaleZ(){ return this._scaleZ } set scaleZ(value: number){ this._scaleZ = value this.updateModelHeight(value) } get depth(){ return depth * this.scaleZ } constructor(features: Featuresjson, projection:(opt:[number,number])=&gt;[number,number], ){ this.Object3D = new THREE.Object3D() this.name = features.properties.name this.is2d = features.properties.is2d || false if(features.properties.centroid){ this.centroid = projection(features.properties.centroid) } if(features.properties.center){ this.center = projection(features.properties.center) } this.generateShapes(features.geometry.coordinates, projection) this.generateMesh(this.depth) } // 生成区块的平面图 generateShapes(coordinates: Coordinates, projection:(opt:[number,number])=&gt;[number,number]){ const innerThis = this // 用于递归coordinates数组 function recursion(coordinates: Coordinates){ coordinates.forEach((item) =&gt; { if(typeof (item[0] as Coordinates)[0] === 'number'){ buildMesh(item as Coordinate[]) }else{ recursion(item as Coordinates) } }) } // 用来构建模型 function buildMesh(coordinates: Coordinate[]){ const shape = new THREE.Shape(); innerThis.shapes.push(shape); // 绘制平面图形 for (let i = 0; i &lt; coordinates.length; i++) { let [x, y] = projection(coordinates[i]); if (i === 0) { shape.moveTo(x, -y); } shape.lineTo(x, -y); } } recursion(coordinates) } // 生成区块的冲压模型 generateMesh(depth: number) { this.cleasMesh() const innerThis = this this.shapes.forEach((shape) =&gt; { const geometry = new THREE.ExtrudeGeometry(shape, { depth: innerThis.is2d? 0 : depth , // 模型的深度 bevelEnabled: false, // 对挤出的形状应用是否斜角 bevelSegments: 1, // 斜角的分段层数 bevelThickness: 0.2 // 设置原始形状上斜角的厚度。 }) this.geometrys.push(geometry) // 创建网格对象 const mesh = new THREE.Mesh(geometry, [ innerThis.topMaterial, innerThis.verticalMaterial, ]); this.mesh.push(mesh) // 为模型添加描边 // TODO 性能差，耗时太多，需要优化 const edges = new THREE.EdgesGeometry( geometry ); const line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0xffffff } ) ); mesh.add( line ); innerThis.Object3D?.add(mesh) }) } private topMaterial = new THREE.ShaderMaterial({ uniforms: { color: { value: new THREE.Color( 0x62797a ) }, }, fragmentShader: \` uniform vec3 color; void main() { gl_FragColor = vec4( color, 1.0 ); } \` }) private verticalMaterial = new THREE.ShaderMaterial({ uniforms: { color: { value: new THREE.Color( 0x62797a ) }, }, fragmentShader: \` uniform vec3 color; void main() { gl_FragColor = vec4( color, 1.0 ); } \` }) setHighlight(isHighlight: boolean){ if(isHighlight){ this.topMaterial.uniforms.color.value = new THREE.Color(0x36c793) this.verticalMaterial.uniforms.color.value = new THREE.Color(0x36c793) }else{ this.topMaterial.uniforms.color.value = new THREE.Color(0x62797a) this.verticalMaterial.uniforms.color.value = new THREE.Color(0x62797a) } } // 跟新模型的高度 updateModelHeight(newHeight: number) { this.mesh.forEach(mesh =&gt; { mesh.scale.z = newHeight mesh.updateMatrix() }) } cleasMesh(){ this.geometrys.forEach(geometry =&gt; { geometry.dispose() }) this.geometrys = [] this.mesh.forEach(mesh =&gt; { this.Object3D?.remove(mesh) }) this.mesh = [] } // 销毁当前区块 destroy(){ this.cleasMesh() this.Object3D?.parent?.remove(this.Object3D) this.Object3D = null } rebuild(){ if(this.Object3D!==null){ this.destroy() } this.Object3D = new THREE.Object3D() this.generateMesh(depth) } }","head":[["meta",{"property":"og:url","content":"https://github.com/export-nan/note/webgl/3dMap.html"}],["meta",{"property":"og:site_name","content":"NAN"}],["meta",{"property":"og:description","content":"Threejs 3d 地图加载器 // @ts-ignore import * as THREE from 'three'; // @ts-ignore import * as d3 from 'd3'; import type {Featuresjson, Mapjson, Coordinates, Coordinate} from './map_package/type'; import { geojsons } from './map_package/index'; const depth = 3 // 设置模型的厚度 let containerElement: HTMLElement; let screenBox: HTMLElement; const mouse = new THREE.Vector2(); const mouseRaycaster = new THREE.Raycaster(); // 事件点数组 let eventPoint: Record&lt;string, EventPoint|undefined&gt; = {} // threejs 渲染器 export class ThreeMap { public renderer: THREE.WebGLRenderer; public scene: THREE.Scene; public camera: THREE.PerspectiveCamera; public height: number; public width: number; constructor(element: HTMLElement){ containerElement = element; const {width, height} = element.getBoundingClientRect(); this.height = height; this.width = width; // 创建webGL渲染器 this.renderer = new THREE.WebGLRenderer( { antialias: true,alpha: true} ); this.renderer.shadowMap.enabled = true; // 开启阴影 this.renderer.shadowMap.type = THREE.PCFSoftShadowMap; this.renderer.toneMapping = THREE.ACESFilmicToneMapping; this.renderer.toneMappingExposure = 1.25; this.renderer.setPixelRatio( window.devicePixelRatio ); this.renderer.setClearColor(0xffffff, 0); this.renderer.setSize(width, height); // 场景 this.scene = new THREE.Scene(); // 相机 透视相机 this.camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 5000); this.camera.position.set(0, -40, 150); this.camera.lookAt(0, 0, 0); // 将渲染器注入到容器里 containerElement.appendChild(this.renderer.domElement); containerElement.addEventListener('mousemove',(event) =&gt; Object.bind(this, this.onMouseMove(event))); containerElement.addEventListener('click',(event) =&gt; Object.bind(this, this.onMouseClick(event))); this.resizeObserver.observe(containerElement) // 添加一个屏幕空间UI盒子 用来放置一些UI元素 screenBox = document.createElement('div') screenBox.style.position = 'absolute' screenBox.className = 'screen-space-ui' containerElement.appendChild(screenBox) } // 切换地图模型 public switchMap(mapName: string){ // 移除上一个地图对象 const current = this.mapModleRecord[this.currentMapName] if(current!==undefined) { current.destroy() } if(geojsons[mapName]===undefined) { console.error('地图不存在') return } this.createMapModle(geojsons[mapName]) Object.values(eventPoint).forEach(item=&gt;{ if(item!==undefined) item.remove() }) eventPoint = {} } // 创建地图模型 private mapModleRecord: Record&lt;string, CreateMap&gt; = {}; private currentMapName: string = ''; private createMapModle(mapJson: Mapjson){ let MapModle = this.mapModleRecord[mapJson.name] if(MapModle===undefined){ MapModle = new CreateMap(mapJson) this.mapModleRecord[mapJson.name] = MapModle }else{ MapModle.rebuild() } this.currentMapName = mapJson.name this.scene.add(MapModle.Object3D as THREE.Object3D) } // 获取一个区块的中心点坐标 private getFeatureCentroid(featureName: string){ return this.mapModleRecord[this.currentMapName].getFeatureCentroid(featureName) } // 事件点 setEventPoint(data: {name: string, value: number}[], template?: (name: string, value: number)=&gt;string){ const newEventPoint:Record&lt;string, EventPoint|undefined&gt; = {} data.forEach(item=&gt;{ const defaultTemplate = (name: string, value: number) =&gt;{ return \` &lt;div class='point'&gt;&lt;/div&gt; &lt;div class='text'&gt; &lt;span class='name'&gt;\${name}&lt;/span&gt; &lt;span class='value'&gt;\${value}&lt;/span&gt; &lt;/div&gt; \` } const ponit = this.updateEventPoint(item.name, item.value, template||defaultTemplate) newEventPoint[item.name] = ponit eventPoint[item.name] = undefined }) Object.values(eventPoint).forEach(item=&gt;{ if(item===undefined) return item.remove() }) eventPoint = newEventPoint } // 更新事件点 public updateEventPoint(featureName: string, value: number, template: (name: string, value: number)=&gt;string){ let dom = eventPoint[featureName] const featureCenter = this.getFeatureCentroid(featureName) if(featureCenter===undefined)return undefined const [x, y, z] = featureCenter const sp = this.toScreenPosition(new THREE.Vector3(x, -y, z)) if(dom!==undefined){ dom.value = value dom.x = sp.x dom.y = sp.y }else{ dom = new EventPoint(sp.x, sp.y, featureName, value, template) } return dom } // 获取所有事件点 public getAllEventPoint(): EventPoint[]{ return Object.values(eventPoint).filter(item=&gt;item!==undefined) as EventPoint[] } // 渲染场景 async render(){ this.renderer.render(this.scene, this.camera); requestAnimationFrame(()=&gt;this.render()) } // 防抖 private debounce?: number private intersectMap: boolean = false private onMouseMove(event: any) { const currentMap = this.mapModleRecord[this.currentMapName] // 将鼠标位置转换为归一化设备坐标 (-1 到 +1) const rect = containerElement.getBoundingClientRect(); const mouseX = event.clientX - rect.left; const mouseY = event.clientY - rect.top; mouse.x = (mouseX / rect.width) * 2 - 1; mouse.y = -(mouseY / rect.height) * 2 + 1; // 更新射线 mouseRaycaster.setFromCamera(mouse, this.camera); const intersectFeatures:CreateFeature[] = [] const activeFeatures:CreateFeature[] = [] if(currentMap===undefined)return const features = Object.values(currentMap.features) const intersectMap = mouseRaycaster.intersectObject(currentMap.Object3D as THREE.Object3D) if(intersectMap.length===0){ if(this.intersectMap){ features.filter(item=&gt;item.isActive).forEach(feature=&gt;{ feature.isActive = false }) } this.intersectMap = false this.emitMoveMouseEvent(null) return } this.intersectMap = true features.forEach((feature)=&gt;{ if(feature.isActive){ activeFeatures.push(feature) } if(feature.Object3D===null)return const inter = mouseRaycaster.intersectObject(feature.Object3D) if(inter.length&gt;0){ intersectFeatures.push(feature) } }) if(this.debounce!==undefined){ clearTimeout(this.debounce) this.debounce = undefined } this.debounce = setTimeout(()=&gt;{ if(intersectFeatures.length&gt;0){ activeFeatures.filter(item=&gt;item.name!==intersectFeatures[0].name).forEach(feature=&gt;{ feature.isActive = false }) const feature = intersectFeatures[0] feature.isActive = true this.emitMoveMouseEvent(feature) } clearTimeout(this.debounce) this.debounce = undefined }) as number } // 监听鼠标点击事件 private onMouseClick(event: any) { const currentMap = this.mapModleRecord[this.currentMapName] const features = Object.values(currentMap.features) const intersectFeatures:CreateFeature[] = [] features.forEach((feature)=&gt;{ if(feature.Object3D===null)return const inter = mouseRaycaster.intersectObject(feature.Object3D) if(inter.length&gt;0){ intersectFeatures.push(feature) } }) if(intersectFeatures.length&gt;0){ this.emitClickMouseEvent(intersectFeatures[0]) } } // 监听鼠标移动事件 private moveMouseEventList:Map&lt;(feature: CreateFeature|null)=&gt;void, {that: Object}&gt; = new Map() public onMoveMouseEvent(callback: (feature: CreateFeature|null)=&gt;void, that: Object = window){ this.moveMouseEventList.set(callback,{that}) } public removeMoveMouseEvent(callback: (feature: CreateFeature|null)=&gt;void){ this.moveMouseEventList.delete(callback) } private emitMoveMouseEvent(feature: CreateFeature|null){ this.moveMouseEventList.forEach((item, callback)=&gt;{ callback.bind(item.that)(feature) }) } // 监听鼠标点击事件 private mouseClickEventList:Map&lt;(feature: CreateFeature)=&gt;void, {that: Object}&gt; = new Map() public onClickMouseEvent(callback: (feature: CreateFeature)=&gt;void, that: Object = window){ this.mouseClickEventList.set(callback,{that}) } public removeClickMouseEvent(callback: (feature: CreateFeature)=&gt;void){ this.mouseClickEventList.delete(callback) } private emitClickMouseEvent(feature: CreateFeature){ this.mouseClickEventList.forEach((item, callback)=&gt;{ callback.bind(item.that)(feature) }) } // 设置一个区块高亮状态 setHighlightStatus(featureName: string, highlight: boolean = false) { const currentMap = this.mapModleRecord[this.currentMapName] if(currentMap===undefined)return currentMap.setHighlightStatus(featureName, highlight); const featureCentroid = currentMap.getFeatureCentroid(featureName); if(featureCentroid===undefined)return const [x, y, z] = featureCentroid const p = eventPoint[featureName] if(p === undefined)return const sp = this.toScreenPosition(new THREE.Vector3(x, -y, z)); p.x = sp.x; p.y = sp.y; } // 清空其他区域的高亮 clearHighlight() { const currentMap = this.mapModleRecord[this.currentMapName] if(currentMap===undefined)return Object.values(currentMap.features).forEach((feature) =&gt; { this.setHighlightStatus(feature.name) }); } // 将 3D 坐标转换到屏幕空间坐标的函数 toScreenPosition(vec3: THREE.Vector3) { // 将世界坐标投影到相机的裁剪空间 vec3.project(this.camera); // 将裁剪空间坐标转换为屏幕空间坐标 const rect = containerElement.getBoundingClientRect(); const halfWidth = rect.width / 2; const halfHeight = rect.height / 2; return { x: (vec3.x * halfWidth) + halfWidth, y: -(vec3.y * halfHeight) + halfHeight }; } resizeObserver = new ResizeObserver(entries =&gt; { for (let entry of entries) { const { width, height } = entry.contentRect; this.resize(width, height); } }); // 更新地图的大小 private resizeDebounce?: number resize(width: number, height: number) { if(this.resizeDebounce!==undefined){ clearTimeout(this.resizeDebounce) this.resizeDebounce = undefined } this.resizeDebounce = setTimeout(()=&gt;{ if(width!==this.width||height!==this.height){ this.camera.aspect = width / height; this.camera.updateProjectionMatrix(); this.renderer.setSize(width, height); this.getAllEventPoint().forEach((eventPoint)=&gt;{ const featureCenter = this.getFeatureCentroid(eventPoint.name) if(featureCenter===undefined)return undefined const [x, y] = featureCenter const sp = this.toScreenPosition(new THREE.Vector3(x, -y, 2)) eventPoint.x = sp.x eventPoint.y = sp.y }) } clearTimeout(this.resizeDebounce) this.resizeDebounce = undefined }) as number } // 销毁整个地图 destroy(){ Object.values(this.mapModleRecord).forEach((map)=&gt;{ map.destroy() }) Object.values(eventPoint).forEach((eventPoint)=&gt;{ eventPoint?.remove() }) } } // 事件点虚拟dom class EventPoint{ dom: HTMLElement template:(name: string, value: number)=&gt;string private _name: string = '' set name(value: string){ this._name = value; this.dom.innerHTML = this.template(this.name, this.value) } get name(){ return this._name } private _value: number = 0 set value(value: number){ this._value = value; this.dom.innerHTML = this.template(this.name, this.value) } get value(){ return this._value } private _x: number = 0 set x(value: number){ this._x = value this.dom.style.left = \`\${value}px\` } get x(){ return this._x } private _y: number = 0 set y(value: number){ this._y = value this.dom.style.top = \`\${value}px\` } get y(){ return this._y } private _className: Record&lt;string, boolean&gt; = {} get className(){ return Object.keys(this._className).filter((item)=&gt;{ return this._className[item] }).join(' ') } addClassNames(value: string){ this._className[value] = true this.dom.className = this.className } removeClassNames(value: string){ this._className[value] = false this.dom.className = this.className } constructor(x: number, y: number, name: string, value: number, template:(name: string, value: number)=&gt;string){ this.template = template this.dom = document.createElement('div') this.dom.style.position = 'absolute' this.dom.innerHTML = template(name, value) this.x = x this.y = y this.name = name this.value = value this.addClassNames('evnet-point') screenBox.appendChild(this.dom) } remove(){ this.dom.remove() } } // 创建地图 模型 class CreateMap{ Object3D: THREE.Object3D|null // 地图的3D对象 readonly features: Record&lt;string, CreateFeature&gt; = {} // 区块 private projection:d3.GeoProjection; // 墨卡托投影转换 constructor(mapJson: Mapjson){ this.Object3D = new THREE.Object3D() const bbox = mapJson.bbox; const offset = mapJson.offset; const rect = containerElement.getBoundingClientRect(); this.projection = d3.geoMercator() .center( bbox===undefined?[104.0, 37.5]: [(bbox[0][0] + bbox[1][0]) / 2, (bbox[0][1] + bbox[1][1]) / 2] ) .translate(offset===undefined? [0, 0] :[offset[0], offset[1]]) if(bbox!==undefined){ const bboxWidth = bbox[1][0] - bbox[0][0]; const bboxHeight = bbox[0][1] - bbox[1][1]; const scale = Math.min(rect.width / bboxWidth, rect.height / bboxHeight) * (mapJson.scale||6); this.projection = this.projection.scale(scale) } const {features} = mapJson; features.forEach((feature) =&gt; { const Feature = this.createFeature(feature) this.Object3D?.add(Feature.Object3D as THREE.Object3D); }) } // 创建区块对象 createFeature(feature: Featuresjson){ const area = new CreateFeature(feature, this.projection as (opt: [number, number])=&gt; [number, number]) this.features[feature.properties.name] = area return area } // 获取一个区块的质心 getFeatureCentroid(name: string):[number, number, number]|undefined{ const feature = this.features[name] if(!feature) return undefined const centroid = feature?.centroid const depth = feature.depth if (!centroid) return undefined const [x, y] = centroid return [x, y, depth] as [number, number, number] } // 设置一个区块高亮状态 setHighlightStatus(featureName: string, highlight: boolean = false) { const feature = this.features[featureName]; if (feature) { feature.isActive = highlight; } } // 销毁当前模型 destroy(){ Object.values(this.features).forEach((feature) =&gt; { feature.destroy() }) this.Object3D?.parent?.remove(this.Object3D) this.Object3D === null } // 重新构建 rebuild(){ if(this.Object3D !== null){ this.destroy() } this.Object3D = new THREE.Object3D() Object.values(this.features).forEach((feature) =&gt; { const FeatureObject3D = feature.rebuild(); this.Object3D?.add(feature.Object3D as THREE.Object3D); }) } } // 创建区块 模型 class CreateFeature{ Object3D: THREE.Object3D|null // 区块的3D对象 name: string // 区块的名称 center?: [number, number] // 区块的中心点 centroid?: [number, number] // 质心点 is2d: boolean = false // 区块是否为2D shapes: THREE.Shape[] = [] // 平面图形 geometrys: THREE.ExtrudeGeometry[] = [] // 立体模型 mesh: THREE.Mesh[] = [] // 区块的网格模型 private _isActive: boolean = false // 区块是否被选中 // 区块是否被选中 get isActive(){ return this._isActive } set isActive(value: boolean){ this._isActive = value this.setHighlight(value) this.scaleZ = value?2:1 const eventpoint = eventPoint[this.name] if(eventpoint!==undefined){ if(value){ eventpoint.addClassNames('active') }else{ eventpoint.removeClassNames('active') } } } _scaleZ: number = 1 // 区块的z轴拉伸 get scaleZ(){ return this._scaleZ } set scaleZ(value: number){ this._scaleZ = value this.updateModelHeight(value) } get depth(){ return depth * this.scaleZ } constructor(features: Featuresjson, projection:(opt:[number,number])=&gt;[number,number], ){ this.Object3D = new THREE.Object3D() this.name = features.properties.name this.is2d = features.properties.is2d || false if(features.properties.centroid){ this.centroid = projection(features.properties.centroid) } if(features.properties.center){ this.center = projection(features.properties.center) } this.generateShapes(features.geometry.coordinates, projection) this.generateMesh(this.depth) } // 生成区块的平面图 generateShapes(coordinates: Coordinates, projection:(opt:[number,number])=&gt;[number,number]){ const innerThis = this // 用于递归coordinates数组 function recursion(coordinates: Coordinates){ coordinates.forEach((item) =&gt; { if(typeof (item[0] as Coordinates)[0] === 'number'){ buildMesh(item as Coordinate[]) }else{ recursion(item as Coordinates) } }) } // 用来构建模型 function buildMesh(coordinates: Coordinate[]){ const shape = new THREE.Shape(); innerThis.shapes.push(shape); // 绘制平面图形 for (let i = 0; i &lt; coordinates.length; i++) { let [x, y] = projection(coordinates[i]); if (i === 0) { shape.moveTo(x, -y); } shape.lineTo(x, -y); } } recursion(coordinates) } // 生成区块的冲压模型 generateMesh(depth: number) { this.cleasMesh() const innerThis = this this.shapes.forEach((shape) =&gt; { const geometry = new THREE.ExtrudeGeometry(shape, { depth: innerThis.is2d? 0 : depth , // 模型的深度 bevelEnabled: false, // 对挤出的形状应用是否斜角 bevelSegments: 1, // 斜角的分段层数 bevelThickness: 0.2 // 设置原始形状上斜角的厚度。 }) this.geometrys.push(geometry) // 创建网格对象 const mesh = new THREE.Mesh(geometry, [ innerThis.topMaterial, innerThis.verticalMaterial, ]); this.mesh.push(mesh) // 为模型添加描边 // TODO 性能差，耗时太多，需要优化 const edges = new THREE.EdgesGeometry( geometry ); const line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0xffffff } ) ); mesh.add( line ); innerThis.Object3D?.add(mesh) }) } private topMaterial = new THREE.ShaderMaterial({ uniforms: { color: { value: new THREE.Color( 0x62797a ) }, }, fragmentShader: \` uniform vec3 color; void main() { gl_FragColor = vec4( color, 1.0 ); } \` }) private verticalMaterial = new THREE.ShaderMaterial({ uniforms: { color: { value: new THREE.Color( 0x62797a ) }, }, fragmentShader: \` uniform vec3 color; void main() { gl_FragColor = vec4( color, 1.0 ); } \` }) setHighlight(isHighlight: boolean){ if(isHighlight){ this.topMaterial.uniforms.color.value = new THREE.Color(0x36c793) this.verticalMaterial.uniforms.color.value = new THREE.Color(0x36c793) }else{ this.topMaterial.uniforms.color.value = new THREE.Color(0x62797a) this.verticalMaterial.uniforms.color.value = new THREE.Color(0x62797a) } } // 跟新模型的高度 updateModelHeight(newHeight: number) { this.mesh.forEach(mesh =&gt; { mesh.scale.z = newHeight mesh.updateMatrix() }) } cleasMesh(){ this.geometrys.forEach(geometry =&gt; { geometry.dispose() }) this.geometrys = [] this.mesh.forEach(mesh =&gt; { this.Object3D?.remove(mesh) }) this.mesh = [] } // 销毁当前区块 destroy(){ this.cleasMesh() this.Object3D?.parent?.remove(this.Object3D) this.Object3D = null } rebuild(){ if(this.Object3D!==null){ this.destroy() } this.Object3D = new THREE.Object3D() this.generateMesh(depth) } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-25T09:39:00.000Z"}],["meta",{"property":"article:author","content":"NAN"}],["meta",{"property":"article:modified_time","content":"2024-06-25T09:39:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-25T09:39:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"NAN\\",\\"url\\":\\"https://github.com/export-nan\\"}]}"]]},"headers":[{"level":2,"title":"Threejs 3d 地图加载器","slug":"threejs-3d-地图加载器","link":"#threejs-3d-地图加载器","children":[]}],"git":{"createdTime":1719308340000,"updatedTime":1719308340000,"contributors":[{"name":"NAN","email":"54296915+open-nan@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.89,"words":2067},"filePathRelative":"note/webgl/3dMap.md","localizedDate":"June 25, 2024","excerpt":"<h2> Threejs 3d 地图加载器</h2>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// @ts-ignore</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">THREE</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'three'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// @ts-ignore</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">as</span> d3 <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'d3'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token keyword\\">type</span> <span class=\\"token punctuation\\">{</span>Featuresjson<span class=\\"token punctuation\\">,</span> Mapjson<span class=\\"token punctuation\\">,</span> Coordinates<span class=\\"token punctuation\\">,</span> Coordinate<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./map_package/type'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> geojsons <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./map_package/index'</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">const</span> depth <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span> <span class=\\"token comment\\">// 设置模型的厚度</span>\\n\\n<span class=\\"token keyword\\">let</span> containerElement<span class=\\"token operator\\">:</span> HTMLElement<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">let</span> screenBox<span class=\\"token operator\\">:</span> HTMLElement<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> mouse <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Vector2</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> mouseRaycaster <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Raycaster</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 事件点数组</span>\\n<span class=\\"token keyword\\">let</span> eventPoint<span class=\\"token operator\\">:</span> Record<span class=\\"token operator\\">&lt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> EventPoint<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">undefined</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// threejs 渲染器</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ThreeMap</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">public</span> renderer<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>WebGLRenderer<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">public</span> scene<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Scene<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">public</span> camera<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>PerspectiveCamera<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">public</span> height<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">public</span> width<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span>element<span class=\\"token operator\\">:</span> HTMLElement<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        containerElement <span class=\\"token operator\\">=</span> element<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>width<span class=\\"token punctuation\\">,</span> height<span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> element<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBoundingClientRect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>height <span class=\\"token operator\\">=</span> height<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>width <span class=\\"token operator\\">=</span> width<span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 创建webGL渲染器</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WebGLRenderer</span><span class=\\"token punctuation\\">(</span> <span class=\\"token punctuation\\">{</span> antialias<span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>alpha<span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span>shadowMap<span class=\\"token punctuation\\">.</span>enabled <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 开启阴影</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span>shadowMap<span class=\\"token punctuation\\">.</span>type <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>PCFSoftShadowMap<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span>toneMapping <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>ACESFilmicToneMapping<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span>toneMappingExposure <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1.25</span><span class=\\"token punctuation\\">;</span>   \\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setPixelRatio</span><span class=\\"token punctuation\\">(</span> window<span class=\\"token punctuation\\">.</span>devicePixelRatio <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setClearColor</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0xffffff</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSize</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token punctuation\\">,</span> height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    \\n        <span class=\\"token comment\\">// 场景</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>scene <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Scene</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 相机 透视相机</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">PerspectiveCamera</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">45</span><span class=\\"token punctuation\\">,</span> width <span class=\\"token operator\\">/</span> height<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera<span class=\\"token punctuation\\">.</span>position<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">40</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">150</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">lookAt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 将渲染器注入到容器里</span>\\n        containerElement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span>domElement<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        containerElement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'mousemove'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">Object</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onMouseMove</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        containerElement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'click'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">Object</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onMouseClick</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resizeObserver<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">observe</span><span class=\\"token punctuation\\">(</span>containerElement<span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token comment\\">// 添加一个屏幕空间UI盒子 用来放置一些UI元素</span>\\n        screenBox <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createElement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'div'</span><span class=\\"token punctuation\\">)</span>\\n        screenBox<span class=\\"token punctuation\\">.</span>style<span class=\\"token punctuation\\">.</span>position <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'absolute'</span>\\n        screenBox<span class=\\"token punctuation\\">.</span>className <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'screen-space-ui'</span>\\n        containerElement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span>screenBox<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 切换地图模型</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">switchMap</span><span class=\\"token punctuation\\">(</span>mapName<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 移除上一个地图对象</span>\\n        <span class=\\"token keyword\\">const</span> current <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentMapName<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>current<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            current<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>geojsons<span class=\\"token punctuation\\">[</span>mapName<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'地图不存在'</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">return</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createMapModle</span><span class=\\"token punctuation\\">(</span>geojsons<span class=\\"token punctuation\\">[</span>mapName<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span>eventPoint<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> item<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        eventPoint <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 创建地图模型</span>\\n    <span class=\\"token keyword\\">private</span> mapModleRecord<span class=\\"token operator\\">:</span> Record<span class=\\"token operator\\">&lt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> CreateMap<span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> currentMapName<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token function\\">createMapModle</span><span class=\\"token punctuation\\">(</span>mapJson<span class=\\"token operator\\">:</span> Mapjson<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">let</span> MapModle <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span>mapJson<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>MapModle<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            MapModle <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">CreateMap</span><span class=\\"token punctuation\\">(</span>mapJson<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span>mapJson<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> MapModle\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n            MapModle<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">rebuild</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentMapName <span class=\\"token operator\\">=</span> mapJson<span class=\\"token punctuation\\">.</span>name\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>scene<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>MapModle<span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 获取一个区块的中心点坐标</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token function\\">getFeatureCentroid</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentMapName<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getFeatureCentroid</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 事件点</span>\\n    <span class=\\"token function\\">setEventPoint</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> template<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> newEventPoint<span class=\\"token operator\\">:</span>Record<span class=\\"token operator\\">&lt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> EventPoint<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">undefined</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n        data<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">defaultTemplate</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">return</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">\\n                    &lt;div class='point'&gt;&lt;/div&gt;\\n                    &lt;div class='text'&gt;\\n                        &lt;span class='name'&gt;</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>name<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">&lt;/span&gt;\\n                        &lt;span class='value'&gt;</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>value<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">&lt;/span&gt;\\n                    &lt;/div&gt;\\n                </span><span class=\\"token template-punctuation string\\">\`</span></span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">const</span> ponit <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">updateEventPoint</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span> item<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">,</span> template<span class=\\"token operator\\">||</span>defaultTemplate<span class=\\"token punctuation\\">)</span>\\n            newEventPoint<span class=\\"token punctuation\\">[</span>item<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> ponit\\n            eventPoint<span class=\\"token punctuation\\">[</span>item<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span>eventPoint<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n            item<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        eventPoint <span class=\\"token operator\\">=</span> newEventPoint\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// 更新事件点</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">updateEventPoint</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function-variable function\\">template</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">let</span> dom <span class=\\"token operator\\">=</span> eventPoint<span class=\\"token punctuation\\">[</span>featureName<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">const</span> featureCenter <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getFeatureCentroid</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>featureCenter<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">,</span> z<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> featureCenter\\n        <span class=\\"token keyword\\">const</span> sp <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toScreenPosition</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Vector3</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span>y<span class=\\"token punctuation\\">,</span> z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>dom<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            dom<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> value\\n            dom<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">=</span> sp<span class=\\"token punctuation\\">.</span>x\\n            dom<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">=</span> sp<span class=\\"token punctuation\\">.</span>y\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n            dom <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">EventPoint</span><span class=\\"token punctuation\\">(</span>sp<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">,</span> sp<span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">,</span> featureName<span class=\\"token punctuation\\">,</span> value<span class=\\"token punctuation\\">,</span> template<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> dom\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// 获取所有事件点</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">getAllEventPoint</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> EventPoint<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span>eventPoint<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">=&gt;</span>item<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> EventPoint<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 渲染场景</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>scene<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">requestAnimationFrame</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 防抖</span>\\n    <span class=\\"token keyword\\">private</span> debounce<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span>\\n    <span class=\\"token keyword\\">private</span> intersectMap<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token function\\">onMouseMove</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> currentMap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentMapName<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token comment\\">// 将鼠标位置转换为归一化设备坐标 (-1 到 +1)</span>\\n        <span class=\\"token keyword\\">const</span> rect <span class=\\"token operator\\">=</span> containerElement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBoundingClientRect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> mouseX <span class=\\"token operator\\">=</span> event<span class=\\"token punctuation\\">.</span>clientX <span class=\\"token operator\\">-</span> rect<span class=\\"token punctuation\\">.</span>left<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> mouseY <span class=\\"token operator\\">=</span> event<span class=\\"token punctuation\\">.</span>clientY <span class=\\"token operator\\">-</span> rect<span class=\\"token punctuation\\">.</span>top<span class=\\"token punctuation\\">;</span>\\n        mouse<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>mouseX <span class=\\"token operator\\">/</span> rect<span class=\\"token punctuation\\">.</span>width<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        mouse<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token punctuation\\">(</span>mouseY <span class=\\"token operator\\">/</span> rect<span class=\\"token punctuation\\">.</span>height<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n    \\n        <span class=\\"token comment\\">// 更新射线</span>\\n        mouseRaycaster<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setFromCamera</span><span class=\\"token punctuation\\">(</span>mouse<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">const</span> intersectFeatures<span class=\\"token operator\\">:</span>CreateFeature<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">const</span> activeFeatures<span class=\\"token operator\\">:</span>CreateFeature<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>currentMap<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span>\\n        <span class=\\"token keyword\\">const</span> features <span class=\\"token operator\\">=</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span>currentMap<span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">)</span>\\n        \\n        <span class=\\"token keyword\\">const</span> intersectMap <span class=\\"token operator\\">=</span> mouseRaycaster<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">intersectObject</span><span class=\\"token punctuation\\">(</span>currentMap<span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>intersectMap<span class=\\"token punctuation\\">.</span>length<span class=\\"token operator\\">===</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>intersectMap<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                features<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">=&gt;</span>item<span class=\\"token punctuation\\">.</span>isActive<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n                    feature<span class=\\"token punctuation\\">.</span>isActive <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span>\\n                <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>intersectMap <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emitMoveMouseEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">return</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>intersectMap <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\n        \\n        features<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">.</span>isActive<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                activeFeatures<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span> \\n            <span class=\\"token keyword\\">const</span> inter <span class=\\"token operator\\">=</span> mouseRaycaster<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">intersectObject</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>inter<span class=\\"token punctuation\\">.</span>length<span class=\\"token operator\\">&gt;</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                intersectFeatures<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>debounce<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">clearTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>debounce<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>debounce <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>debounce <span class=\\"token operator\\">=</span> <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>intersectFeatures<span class=\\"token punctuation\\">.</span>length<span class=\\"token operator\\">&gt;</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                activeFeatures<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token operator\\">=&gt;</span>item<span class=\\"token punctuation\\">.</span>name<span class=\\"token operator\\">!==</span>intersectFeatures<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n                    feature<span class=\\"token punctuation\\">.</span>isActive <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span>\\n                <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token keyword\\">const</span> feature <span class=\\"token operator\\">=</span> intersectFeatures<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span>\\n                feature<span class=\\"token punctuation\\">.</span>isActive <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emitMoveMouseEvent</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span>\\n                \\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token function\\">clearTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>debounce<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>debounce <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token builtin\\">number</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 监听鼠标点击事件</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token function\\">onMouseClick</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> currentMap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentMapName<span class=\\"token punctuation\\">]</span>\\n\\n        <span class=\\"token keyword\\">const</span> features <span class=\\"token operator\\">=</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span>currentMap<span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">const</span> intersectFeatures<span class=\\"token operator\\">:</span>CreateFeature<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n\\n        features<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span> \\n            <span class=\\"token keyword\\">const</span> inter <span class=\\"token operator\\">=</span> mouseRaycaster<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">intersectObject</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>inter<span class=\\"token punctuation\\">.</span>length<span class=\\"token operator\\">&gt;</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                intersectFeatures<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>intersectFeatures<span class=\\"token punctuation\\">.</span>length<span class=\\"token operator\\">&gt;</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emitClickMouseEvent</span><span class=\\"token punctuation\\">(</span>intersectFeatures<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 监听鼠标移动事件</span>\\n    <span class=\\"token keyword\\">private</span> moveMouseEventList<span class=\\"token operator\\">:</span>Map<span class=\\"token operator\\">&lt;</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>that<span class=\\"token operator\\">:</span> Object<span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">onMoveMouseEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token function-variable function\\">callback</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">,</span> that<span class=\\"token operator\\">:</span> Object <span class=\\"token operator\\">=</span> window<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>moveMouseEventList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span>callback<span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>that<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">removeMoveMouseEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token function-variable function\\">callback</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>moveMouseEventList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span>callback<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token function\\">emitMoveMouseEvent</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>moveMouseEventList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">,</span> callback<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">callback</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">.</span>that<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// 监听鼠标点击事件</span>\\n    <span class=\\"token keyword\\">private</span> mouseClickEventList<span class=\\"token operator\\">:</span>Map<span class=\\"token operator\\">&lt;</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>that<span class=\\"token operator\\">:</span> Object<span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">onClickMouseEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token function-variable function\\">callback</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">,</span> that<span class=\\"token operator\\">:</span> Object <span class=\\"token operator\\">=</span> window<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mouseClickEventList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span>callback<span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>that<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token function\\">removeClickMouseEvent</span><span class=\\"token punctuation\\">(</span><span class=\\"token function-variable function\\">callback</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mouseClickEventList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span>callback<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token function\\">emitClickMouseEvent</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> CreateFeature<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mouseClickEventList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">,</span> callback<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">callback</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">.</span>that<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n\\n    <span class=\\"token comment\\">// 设置一个区块高亮状态</span>\\n    <span class=\\"token function\\">setHighlightStatus</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> highlight<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> currentMap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentMapName<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>currentMap<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span>\\n        currentMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setHighlightStatus</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token punctuation\\">,</span> highlight<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        \\n        <span class=\\"token keyword\\">const</span> featureCentroid <span class=\\"token operator\\">=</span> currentMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getFeatureCentroid</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>featureCentroid<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span>\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">,</span> z<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> featureCentroid\\n\\n        <span class=\\"token keyword\\">const</span> p <span class=\\"token operator\\">=</span> eventPoint<span class=\\"token punctuation\\">[</span>featureName<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>p <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span>\\n        <span class=\\"token keyword\\">const</span> sp <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toScreenPosition</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Vector3</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span>y<span class=\\"token punctuation\\">,</span> z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        p<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">=</span> sp<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">;</span>\\n        p<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">=</span> sp<span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 清空其他区域的高亮</span>\\n    <span class=\\"token function\\">clearHighlight</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> currentMap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentMapName<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>currentMap<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span>\\n        Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span>currentMap<span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setHighlightStatus</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n\\n    <span class=\\"token comment\\">// 将 3D 坐标转换到屏幕空间坐标的函数</span>\\n    <span class=\\"token function\\">toScreenPosition</span><span class=\\"token punctuation\\">(</span>vec3<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Vector3<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 将世界坐标投影到相机的裁剪空间</span>\\n        vec3<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">project</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 将裁剪空间坐标转换为屏幕空间坐标</span>\\n        <span class=\\"token keyword\\">const</span> rect <span class=\\"token operator\\">=</span> containerElement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBoundingClientRect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">const</span> halfWidth <span class=\\"token operator\\">=</span> rect<span class=\\"token punctuation\\">.</span>width <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> halfHeight <span class=\\"token operator\\">=</span> rect<span class=\\"token punctuation\\">.</span>height <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n            x<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>vec3<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">*</span> halfWidth<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> halfWidth<span class=\\"token punctuation\\">,</span>\\n            y<span class=\\"token operator\\">:</span> <span class=\\"token operator\\">-</span><span class=\\"token punctuation\\">(</span>vec3<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">*</span> halfHeight<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> halfHeight\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    resizeObserver <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ResizeObserver</span><span class=\\"token punctuation\\">(</span>entries <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> entry <span class=\\"token keyword\\">of</span> entries<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> width<span class=\\"token punctuation\\">,</span> height <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> entry<span class=\\"token punctuation\\">.</span>contentRect<span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">resize</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token punctuation\\">,</span> height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 更新地图的大小</span>\\n    <span class=\\"token keyword\\">private</span> resizeDebounce<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span>\\n    <span class=\\"token function\\">resize</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> height<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resizeDebounce<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">clearTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resizeDebounce<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resizeDebounce <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resizeDebounce <span class=\\"token operator\\">=</span> <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>width<span class=\\"token operator\\">||</span>height<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera<span class=\\"token punctuation\\">.</span>aspect <span class=\\"token operator\\">=</span> width <span class=\\"token operator\\">/</span> height<span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>camera<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">updateProjectionMatrix</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>renderer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSize</span><span class=\\"token punctuation\\">(</span>width<span class=\\"token punctuation\\">,</span> height<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getAllEventPoint</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>eventPoint<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token keyword\\">const</span> featureCenter <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getFeatureCentroid</span><span class=\\"token punctuation\\">(</span>eventPoint<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>featureCenter<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">undefined</span>\\n                    <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> featureCenter\\n                    <span class=\\"token keyword\\">const</span> sp <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toScreenPosition</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Vector3</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span>y<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                    eventPoint<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">=</span> sp<span class=\\"token punctuation\\">.</span>x\\n                    eventPoint<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">=</span> sp<span class=\\"token punctuation\\">.</span>y\\n                <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token function\\">clearTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resizeDebounce<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>resizeDebounce <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> <span class=\\"token builtin\\">number</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 销毁整个地图</span>\\n    <span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mapModleRecord<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>map<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            map<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span>eventPoint<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>eventPoint<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            eventPoint<span class=\\"token operator\\">?.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 事件点虚拟dom</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">EventPoint</span><span class=\\"token punctuation\\">{</span>\\n    dom<span class=\\"token operator\\">:</span> HTMLElement\\n    <span class=\\"token function-variable function\\">template</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token builtin\\">string</span>\\n\\n    <span class=\\"token keyword\\">private</span> _name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">''</span>\\n    <span class=\\"token keyword\\">set</span> <span class=\\"token function\\">name</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_name <span class=\\"token operator\\">=</span> value<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>innerHTML <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">template</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">name</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_name\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> _value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n    <span class=\\"token keyword\\">set</span> <span class=\\"token function\\">value</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_value <span class=\\"token operator\\">=</span> value<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>innerHTML <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">template</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">value</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_value\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> _x<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n    <span class=\\"token keyword\\">set</span> <span class=\\"token function\\">x</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_x <span class=\\"token operator\\">=</span> value\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>style<span class=\\"token punctuation\\">.</span>left <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>value<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">px</span><span class=\\"token template-punctuation string\\">\`</span></span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">x</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_x\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> _y<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n    <span class=\\"token keyword\\">set</span> <span class=\\"token function\\">y</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_y <span class=\\"token operator\\">=</span> value\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>style<span class=\\"token punctuation\\">.</span>top <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>value<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">px</span><span class=\\"token template-punctuation string\\">\`</span></span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">y</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_y\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> _className<span class=\\"token operator\\">:</span> Record<span class=\\"token operator\\">&lt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">boolean</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">className</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">keys</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_className<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_className<span class=\\"token punctuation\\">[</span>item<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">' '</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">addClassNames</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_className<span class=\\"token punctuation\\">[</span>value<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>className <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>className\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">removeClassNames</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_className<span class=\\"token punctuation\\">[</span>value<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>className <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>className\\n    <span class=\\"token punctuation\\">}</span>\\n\\n\\n    <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> y<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function-variable function\\">template</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>template <span class=\\"token operator\\">=</span> template\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createElement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'div'</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>style<span class=\\"token punctuation\\">.</span>position <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'absolute'</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span>innerHTML <span class=\\"token operator\\">=</span> <span class=\\"token function\\">template</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> value<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">=</span> x\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">=</span> y\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> value\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addClassNames</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'evnet-point'</span><span class=\\"token punctuation\\">)</span>\\n        screenBox<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>dom<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n\\n<span class=\\"token comment\\">// 创建地图 模型</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CreateMap</span><span class=\\"token punctuation\\">{</span>\\n    Object3D<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">null</span> <span class=\\"token comment\\">// 地图的3D对象</span>\\n    \\n    <span class=\\"token keyword\\">readonly</span> features<span class=\\"token operator\\">:</span> Record<span class=\\"token operator\\">&lt;</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> CreateFeature<span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// 区块</span>\\n\\n    <span class=\\"token keyword\\">private</span> projection<span class=\\"token operator\\">:</span>d3<span class=\\"token punctuation\\">.</span>GeoProjection<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 墨卡托投影转换</span>\\n\\n    <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span>mapJson<span class=\\"token operator\\">:</span> Mapjson<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Object3D</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">const</span> bbox <span class=\\"token operator\\">=</span> mapJson<span class=\\"token punctuation\\">.</span>bbox<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> offset <span class=\\"token operator\\">=</span> mapJson<span class=\\"token punctuation\\">.</span>offset<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">const</span> rect <span class=\\"token operator\\">=</span> containerElement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBoundingClientRect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>projection <span class=\\"token operator\\">=</span> d3<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">geoMercator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">center</span><span class=\\"token punctuation\\">(</span>\\n            bbox<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token operator\\">?</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">104.0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">37.5</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">:</span>\\n            <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">(</span>bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span>bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">translate</span><span class=\\"token punctuation\\">(</span>offset<span class=\\"token operator\\">===</span><span class=\\"token keyword\\">undefined</span><span class=\\"token operator\\">?</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">[</span>offset<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> offset<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>bbox<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> bboxWidth <span class=\\"token operator\\">=</span> bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-</span> bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">const</span> bboxHeight <span class=\\"token operator\\">=</span> bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-</span> bbox<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">const</span> scale <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">min</span><span class=\\"token punctuation\\">(</span>rect<span class=\\"token punctuation\\">.</span>width <span class=\\"token operator\\">/</span> bboxWidth<span class=\\"token punctuation\\">,</span> rect<span class=\\"token punctuation\\">.</span>height <span class=\\"token operator\\">/</span> bboxHeight<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span>mapJson<span class=\\"token punctuation\\">.</span>scale<span class=\\"token operator\\">||</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>projection <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>projection<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">scale</span><span class=\\"token punctuation\\">(</span>scale<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>features<span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> mapJson<span class=\\"token punctuation\\">;</span>\\n        features<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> Feature <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createFeature</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">?.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>Feature<span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 创建区块对象</span>\\n    <span class=\\"token function\\">createFeature</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token operator\\">:</span> Featuresjson<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> area  <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">CreateFeature</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>projection <span class=\\"token keyword\\">as</span> <span class=\\"token punctuation\\">(</span>opt<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">[</span>feature<span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> area\\n        <span class=\\"token keyword\\">return</span> area\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 获取一个区块的质心</span>\\n    <span class=\\"token function\\">getFeatureCentroid</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">|</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> feature <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">[</span>name<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>feature<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token keyword\\">const</span> centroid <span class=\\"token operator\\">=</span> feature<span class=\\"token operator\\">?.</span>centroid\\n        <span class=\\"token keyword\\">const</span> depth <span class=\\"token operator\\">=</span> feature<span class=\\"token punctuation\\">.</span>depth\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>centroid<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">undefined</span>\\n        <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> centroid\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">as</span> <span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 设置一个区块高亮状态</span>\\n    <span class=\\"token function\\">setHighlightStatus</span><span class=\\"token punctuation\\">(</span>featureName<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> highlight<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> feature <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">[</span>featureName<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            feature<span class=\\"token punctuation\\">.</span>isActive <span class=\\"token operator\\">=</span> highlight<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 销毁当前模型</span>\\n    <span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            feature<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">?.</span>parent<span class=\\"token operator\\">?.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">null</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 重新构建</span>\\n    <span class=\\"token function\\">rebuild</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token operator\\">!==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Object3D</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>features<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> FeatureObject3D <span class=\\"token operator\\">=</span> feature<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">rebuild</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">?.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>feature<span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token comment\\">// 创建区块 模型</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CreateFeature</span><span class=\\"token punctuation\\">{</span>\\n    Object3D<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">|</span><span class=\\"token keyword\\">null</span> <span class=\\"token comment\\">// 区块的3D对象</span>\\n\\n    name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token comment\\">// 区块的名称</span>\\n    center<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// 区块的中心点</span>\\n    centroid<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// 质心点</span>\\n\\n    is2d<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span> <span class=\\"token comment\\">// 区块是否为2D</span>\\n    shapes<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Shape<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// 平面图形</span>\\n    geometrys<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>ExtrudeGeometry<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// 立体模型</span>\\n    mesh<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">THREE</span><span class=\\"token punctuation\\">.</span>Mesh<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// 区块的网格模型</span>\\n    \\n    <span class=\\"token keyword\\">private</span> _isActive<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span> <span class=\\"token comment\\">// 区块是否被选中</span>\\n    <span class=\\"token comment\\">// 区块是否被选中</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">isActive</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_isActive\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">set</span> <span class=\\"token function\\">isActive</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_isActive <span class=\\"token operator\\">=</span> value\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setHighlight</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>scaleZ <span class=\\"token operator\\">=</span> value<span class=\\"token operator\\">?</span><span class=\\"token number\\">2</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">1</span>\\n        <span class=\\"token keyword\\">const</span> eventpoint <span class=\\"token operator\\">=</span> eventPoint<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>eventpoint<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                eventpoint<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addClassNames</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'active'</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n                eventpoint<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeClassNames</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'active'</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    _scaleZ<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token comment\\">// 区块的z轴拉伸</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">scaleZ</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_scaleZ\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">set</span> <span class=\\"token function\\">scaleZ</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>_scaleZ <span class=\\"token operator\\">=</span> value\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">updateModelHeight</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">get</span> <span class=\\"token function\\">depth</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> depth <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>scaleZ\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span>features<span class=\\"token operator\\">:</span> Featuresjson<span class=\\"token punctuation\\">,</span> <span class=\\"token function-variable function\\">projection</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">(</span>opt<span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Object3D</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> features<span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>name\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>is2d <span class=\\"token operator\\">=</span> features<span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>is2d <span class=\\"token operator\\">||</span> <span class=\\"token boolean\\">false</span>\\n\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>features<span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>centroid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>centroid <span class=\\"token operator\\">=</span> <span class=\\"token function\\">projection</span><span class=\\"token punctuation\\">(</span>features<span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>centroid<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>features<span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>center<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>center <span class=\\"token operator\\">=</span> <span class=\\"token function\\">projection</span><span class=\\"token punctuation\\">(</span>features<span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>center<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">generateShapes</span><span class=\\"token punctuation\\">(</span>features<span class=\\"token punctuation\\">.</span>geometry<span class=\\"token punctuation\\">.</span>coordinates<span class=\\"token punctuation\\">,</span> projection<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">generateMesh</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>depth<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 生成区块的平面图</span>\\n    <span class=\\"token function\\">generateShapes</span><span class=\\"token punctuation\\">(</span>coordinates<span class=\\"token operator\\">:</span> Coordinates<span class=\\"token punctuation\\">,</span> <span class=\\"token function-variable function\\">projection</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">(</span>opt<span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span><span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">const</span> innerThis <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span>\\n\\n        <span class=\\"token comment\\">// 用于递归coordinates数组</span>\\n        <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">recursion</span><span class=\\"token punctuation\\">(</span>coordinates<span class=\\"token operator\\">:</span> Coordinates<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            coordinates<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> <span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">as</span> Coordinates<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'number'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token function\\">buildMesh</span><span class=\\"token punctuation\\">(</span>item <span class=\\"token keyword\\">as</span> Coordinate<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token function\\">recursion</span><span class=\\"token punctuation\\">(</span>item <span class=\\"token keyword\\">as</span> Coordinates<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token comment\\">// 用来构建模型</span>\\n        <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">buildMesh</span><span class=\\"token punctuation\\">(</span>coordinates<span class=\\"token operator\\">:</span> Coordinate<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> shape <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Shape</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            innerThis<span class=\\"token punctuation\\">.</span>shapes<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>shape<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token comment\\">// 绘制平面图形</span>\\n            <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> coordinates<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">let</span> <span class=\\"token punctuation\\">[</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">projection</span><span class=\\"token punctuation\\">(</span>coordinates<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">===</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    shape<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">moveTo</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span>y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n                shape<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">lineTo</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span>y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token function\\">recursion</span><span class=\\"token punctuation\\">(</span>coordinates<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 生成区块的冲压模型</span>\\n    <span class=\\"token function\\">generateMesh</span><span class=\\"token punctuation\\">(</span>depth<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">cleasMesh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">const</span> innerThis <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>shapes<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>shape<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> geometry <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ExtrudeGeometry</span><span class=\\"token punctuation\\">(</span>shape<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n                depth<span class=\\"token operator\\">:</span> innerThis<span class=\\"token punctuation\\">.</span>is2d<span class=\\"token operator\\">?</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">:</span> depth <span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 模型的深度</span>\\n                bevelEnabled<span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 对挤出的形状应用是否斜角</span>\\n                bevelSegments<span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 斜角的分段层数</span>\\n                bevelThickness<span class=\\"token operator\\">:</span> <span class=\\"token number\\">0.2</span> <span class=\\"token comment\\">// 设置原始形状上斜角的厚度。</span>\\n            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>geometrys<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>geometry<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token comment\\">// 创建网格对象</span>\\n            <span class=\\"token keyword\\">const</span> mesh <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Mesh</span><span class=\\"token punctuation\\">(</span>geometry<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span>\\n                innerThis<span class=\\"token punctuation\\">.</span>topMaterial<span class=\\"token punctuation\\">,</span>\\n                innerThis<span class=\\"token punctuation\\">.</span>verticalMaterial<span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mesh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>mesh<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token comment\\">// 为模型添加描边</span>\\n            <span class=\\"token comment\\">// TODO 性能差，耗时太多，需要优化</span>\\n            <span class=\\"token keyword\\">const</span> edges <span class=\\"token operator\\">=</span>  <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">EdgesGeometry</span><span class=\\"token punctuation\\">(</span> geometry <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">const</span> line <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">LineSegments</span><span class=\\"token punctuation\\">(</span> edges<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">LineBasicMaterial</span><span class=\\"token punctuation\\">(</span> <span class=\\"token punctuation\\">{</span> color<span class=\\"token operator\\">:</span> <span class=\\"token number\\">0xffffff</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            mesh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span> line <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            innerThis<span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">?.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>mesh<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> topMaterial <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ShaderMaterial</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n        uniforms<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n            color<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> value<span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Color</span><span class=\\"token punctuation\\">(</span> <span class=\\"token number\\">0x62797a</span> <span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        fragmentShader<span class=\\"token operator\\">:</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">\\n            uniform vec3 color;\\n            void main() {\\n                gl_FragColor = vec4( color, 1.0 );\\n            }\\n        </span><span class=\\"token template-punctuation string\\">\`</span></span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">private</span> verticalMaterial <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ShaderMaterial</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n        uniforms<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n            color<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> value<span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Color</span><span class=\\"token punctuation\\">(</span> <span class=\\"token number\\">0x62797a</span> <span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n        fragmentShader<span class=\\"token operator\\">:</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">\\n            uniform vec3 color;\\n            void main() {\\n                gl_FragColor = vec4( color, 1.0 );\\n            }\\n        </span><span class=\\"token template-punctuation string\\">\`</span></span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token function\\">setHighlight</span><span class=\\"token punctuation\\">(</span>isHighlight<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>isHighlight<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>topMaterial<span class=\\"token punctuation\\">.</span>uniforms<span class=\\"token punctuation\\">.</span>color<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Color</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0x36c793</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>verticalMaterial<span class=\\"token punctuation\\">.</span>uniforms<span class=\\"token punctuation\\">.</span>color<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Color</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0x36c793</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>topMaterial<span class=\\"token punctuation\\">.</span>uniforms<span class=\\"token punctuation\\">.</span>color<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Color</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0x62797a</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>verticalMaterial<span class=\\"token punctuation\\">.</span>uniforms<span class=\\"token punctuation\\">.</span>color<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Color</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0x62797a</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 跟新模型的高度</span>\\n    <span class=\\"token function\\">updateModelHeight</span><span class=\\"token punctuation\\">(</span>newHeight<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mesh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>mesh <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            mesh<span class=\\"token punctuation\\">.</span>scale<span class=\\"token punctuation\\">.</span>z <span class=\\"token operator\\">=</span> newHeight\\n            mesh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">updateMatrix</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">cleasMesh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>geometrys<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>geometry <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            geometry<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dispose</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>geometrys <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mesh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>mesh <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">?.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span>mesh<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>mesh <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 销毁当前区块</span>\\n    <span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">cleasMesh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">?.</span>parent<span class=\\"token operator\\">?.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token function\\">rebuild</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D<span class=\\"token operator\\">!==</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">destroy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>Object3D <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\"><span class=\\"token constant\\">THREE</span></span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Object3D</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">generateMesh</span><span class=\\"token punctuation\\">(</span>depth<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
