import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as l,c as d,e as n,b as t,d as s,f as a}from"./app-ByLiKQ9I.js";const h={},c={href:"https://github.com/export-nan/nan-blogs",target:"_blank",rel:"noopener noreferrer"},p={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://theme-hope.vuejs.press/zh/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site",target:"_blank",rel:"noopener noreferrer"},k={href:"https://commonmark.org/help/",target:"_blank",rel:"noopener noreferrer"};function m(f,e){const o=i("ExternalLinkIcon");return l(),d("div",null,[e[10]||(e[10]=n('<h1 id="起源" tabindex="-1"><a class="header-anchor" href="#起源" aria-hidden="true">#</a> 起源</h1><h2 id="站点技术选型" tabindex="-1"><a class="header-anchor" href="#站点技术选型" aria-hidden="true">#</a> 站点技术选型</h2><p>技术栈</p><ul><li>markdown</li><li>vuepress</li><li>Github pase</li><li>Github actions</li></ul><p>思路：博客文档部分采用 <code>markdown</code> 进行编写，将github仓库作为我们的文章数据源，使用 <code>vuepress</code> 对文章进行静态文件编译，采用 <code>vuepress-theme-hope</code> 进行主题开发，借助 <code>Github actions</code> 进行自动化部署。</p><p>为什么是 <code>markdown</code>？ 拜托！<code>markdown</code> 真的超好用的好吧，我真的爱死mardown了_(:з」∠)_</p><p>采用<code>vuepress</code>编译为静态文件的好处: 首先我们只编写 markdown 文件并 push 到git远端上，这样保证了我们文档笔记的安全性，你也不想你写了很久的笔记因为服务器到期或者其他原因突然离你而去对吧？而且这样我们不用考虑后端交互，只专注于 <code>markdown</code> 文档编写,<code>vuepress</code>会帮我搞定一切，并且因为最终编译为静态文件这便于了我们网站在SEO方面的优化，最后我们只要配置好我们的<code>Github actions</code>我们就可以很方便的对我们的博客内容进行推送</p><h2 id="站点规划" tabindex="-1"><a class="header-anchor" href="#站点规划" aria-hidden="true">#</a> 站点规划</h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 基于<code>docker</code>自动发布到<code>阿里云</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 基于<code>Github actions</code>自动发布到<code>Github page</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 建站</label></li></ul><h2 id="源码地址" tabindex="-1"><a class="header-anchor" href="#源码地址" aria-hidden="true">#</a> 源码地址</h2>',10)),t("p",null,[e[1]||(e[1]=s("Github URl: ")),t("a",c,[e[0]||(e[0]=t("em",null,"https://github.com/export-nan/nan-blogs",-1)),a(o)])]),e[11]||(e[11]=t("h2",{id:"技术栈相关",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#技术栈相关","aria-hidden":"true"},"#"),s(" 技术栈相关")],-1)),t("p",null,[e[3]||(e[3]=s("vuepress: ")),t("a",p,[e[2]||(e[2]=s("https://v2.vuepress.vuejs.org/zh/")),a(o)])]),t("p",null,[e[5]||(e[5]=s("vuepress-theme-hope: ")),t("a",u,[e[4]||(e[4]=s("https://theme-hope.vuejs.press/zh/")),a(o)])]),t("p",null,[e[7]||(e[7]=s("Github pase: ")),t("a",b,[e[6]||(e[6]=s("https://docs.github.com")),a(o)])]),t("p",null,[e[9]||(e[9]=s("markdown: ")),t("a",k,[e[8]||(e[8]=s("markdown 教程")),a(o)])])])}const v=r(h,[["render",m],["__file","index.html.vue"]]);export{v as default};
